version: '3.8'
services:
  postgresql:
    image: postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=movies
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_HOST=backend
    ports:
      - 5432:5432
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    ports:
      - 15673:15672

    environment:
      RABBITMQ_DEFAULT_VHOST: vhost
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10
    restart: always
    networks:
      - my_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    restart: always

    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresql:
        condition: service_started

    networks:
      - my_network
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_config worker -l info -B
    depends_on:
      - rabbitmq
      - backend
      - mongodb
    networks:
      - my_network
  mongodb:
    image: mongo
    volumes:
      - ./data/db:/data/db
    ports:
      - "2017:2017"
    networks:
      - my_network
    depends_on:
      - backend

networks:
  my_network:
